[package]
authors.workspace    = true
categories.workspace = true
description          = "Check's command line interface"
edition.workspace    = true
homepage.workspace   = true
keywords.workspace   = true
license.workspace    = true
name                 = "check_cli"
publish              = false
repository.workspace = true
version              = "0.0.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "check"
path = "src/main.rs"

[dependencies]
anyhow                   = { workspace = true }
check_analyze            = { workspace = true }
check_configuration      = { workspace = true }
check_console            = { workspace = true }
check_css_analyze        = { workspace = true }
check_css_syntax         = { workspace = true }
check_deserialize        = { workspace = true }
check_deserialize_macros = { workspace = true }
check_diagnostics        = { workspace = true, features = ["std", "bpaf"] }
check_flags              = { workspace = true }
check_formatter          = { workspace = true }
check_fs                 = { workspace = true }
check_glob               = { workspace = true }
check_graphql_analyze    = { workspace = true }
check_graphql_syntax     = { workspace = true }
check_grit_patterns      = { workspace = true }
check_html_formatter     = { workspace = true }
check_js_analyze         = { workspace = true }
check_js_formatter       = { workspace = true }
check_js_syntax          = { workspace = true }
check_json_analyze       = { workspace = true }
check_json_formatter     = { workspace = true }
check_json_parser        = { workspace = true }
check_json_syntax        = { workspace = true }
check_lsp                = { workspace = true }
check_migrate            = { workspace = true }
check_resolver           = { workspace = true }
check_rowan              = { workspace = true }
check_rule_options       = { workspace = true }
check_service            = { workspace = true }
check_text_edit          = { workspace = true }
bpaf                     = { workspace = true, features = ["bright-color"] }
camino                   = { workspace = true }
crossbeam                = { workspace = true }
dashmap                  = { workspace = true }
path-absolutize          = { workspace = true }
quick-junit              = "0.5.1"
rayon                    = { workspace = true }
regex                    = { workspace = true }
rustc-hash               = { workspace = true }
serde                    = { workspace = true, features = ["derive"] }
serde_json               = { workspace = true }
smallvec                 = { workspace = true }
terminal_size            = { workspace = true }
tokio                    = { workspace = true, features = ["io-std", "io-util", "net", "time", "rt", "sync", "rt-multi-thread", "macros"] }
tracing                  = { workspace = true }
tracing-appender         = "0.2.3"
tracing-subscriber       = { workspace = true, features = ["env-filter", "json"] }
tracing-tree             = "0.4.0"


[target.'cfg(unix)'.dependencies]
libc  = "0.2.174"
tokio = { workspace = true, features = ["process"] }

[target.'cfg(windows)'.dependencies]
mimalloc = { workspace = true }

[target.'cfg(all(target_family="unix", not(all(target_arch = "aarch64", target_env = "musl"))))'.dependencies]
tikv-jemallocator = { workspace = true }

[dev-dependencies]
check_css_formatter  = { workspace = true }
check_js_formatter   = { workspace = true }
check_json_formatter = { workspace = true }
check_json_parser    = { workspace = true }
insta                = { workspace = true }
regex                = { workspace = true }
tokio                = { workspace = true, features = ["io-util"] }

[features]
docgen    = ["bpaf/docgen"]
js_plugin = ["check_service/js_plugin"]

[lints]
workspace = true
