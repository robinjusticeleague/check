[package]
authors.workspace    = true
categories.workspace = true
description          = "Data structure for tracking inferred information across modules"
edition.workspace    = true
homepage.workspace   = true
keywords.workspace   = true
license.workspace    = true
name                 = "check_module_graph"
repository.workspace = true
version              = "0.0.1"

[lints]
workspace = true

[dependencies]
check_console        = { workspace = true }
check_diagnostics    = { workspace = true }
check_formatter      = { workspace = true }
check_fs             = { workspace = true }
check_js_semantic    = { workspace = true }
check_js_syntax      = { workspace = true }
check_js_type_info   = { workspace = true }
check_jsdoc_comment  = { workspace = true }
check_package        = { workspace = true }
check_project_layout = { workspace = true }
check_resolver       = { workspace = true }
check_rowan          = { workspace = true }
camino               = { workspace = true }
cfg-if               = { workspace = true }
indexmap             = { workspace = true }
once_cell            = "1.21.3"                              # Use `std::sync::OnceLock::get_or_try_init` when it is stable.
papaya               = { workspace = true }
rust-lapper          = { workspace = true }
rustc-hash           = { workspace = true }
schemars             = { workspace = true, optional = true }
serde                = { workspace = true, optional = true }
serde_json           = { workspace = true }
static_assertions    = { workspace = true }

[dev-dependencies]
check_deserialize  = { workspace = true }
check_js_formatter = { workspace = true }
check_js_parser    = { workspace = true }
check_json_parser  = { workspace = true }
check_json_value   = { workspace = true }
check_test_utils   = { workspace = true }
divan              = { package = "codspeed-divan-compat", version = "*" }
insta              = { workspace = true }
walkdir            = { workspace = true }

[target.'cfg(target_os = "windows")'.dev-dependencies]
mimalloc = { workspace = true }

[target.'cfg(all(target_family="unix", not(all(target_arch = "aarch64", target_env = "musl"))))'.dev-dependencies]
tikv-jemallocator = { workspace = true }

[features]
schema = ["dep:schemars"]
serde  = ["dep:serde"]

[[bench]]
harness = false
name    = "module_graph"
