[workspace]
# Use the newer version of the cargo resolver
# https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions
members  = ["crates/*"]
resolver = "2"

[workspace.lints.rust]
absolute_paths_not_starting_with_crate = "warn"
dead_code                              = "warn"
trivial_numeric_casts                  = "warn"
unused_import_braces                   = "warn"
unused_lifetimes                       = "warn"
unused_macro_rules                     = "warn"

[workspace.lints.clippy]
allow_attributes        = "deny"
cargo_common_metadata   = "allow"
empty_docs              = "allow" # there are some false positives inside check_wasm
multiple_crate_versions = "allow"

# pedantic
assigning_clones             = "warn"
checked_conversions          = "warn"
cloned_instead_of_copied     = "warn"
copy_iterator                = "warn"
dbg_macro                    = "warn"
doc_link_with_quotes         = "warn"
empty_enum                   = "warn"
expl_impl_clone_on_copy      = "warn"
explicit_into_iter_loop      = "warn"
filter_map_next              = "warn"
flat_map_option              = "warn"
fn_params_excessive_bools    = "warn"
from_iter_instead_of_collect = "warn"
implicit_clone               = "warn"
implicit_hasher              = "warn"
index_refutable_slice        = "warn"
inefficient_to_string        = "warn"
invalid_upcast_comparisons   = "warn"
iter_filter_is_ok            = "warn"
iter_not_returning_iterator  = "warn"
large_stack_arrays           = "warn"
large_types_passed_by_value  = "warn"
macro_use_imports            = "warn"
manual_is_variant_and        = "warn"
manual_ok_or                 = "warn"
manual_string_new            = "warn"
map_flatten                  = "warn"
map_unwrap_or                = "warn"
mismatching_type_param_order = "warn"
mut_mut                      = "warn"
naive_bytecount              = "warn"
needless_bitwise_bool        = "warn"
needless_continue            = "warn"
needless_for_each            = "warn"
no_effect_underscore_binding = "warn"
option_as_ref_cloned         = "warn"
ref_binding_to_reference     = "warn"
ref_option_ref               = "warn"
single_char_pattern          = "warn"
stable_sort_primitive        = "warn"
str_split_at_newline         = "warn"
unnecessary_box_returns      = "warn"
unnecessary_join             = "warn"
unnested_or_patterns         = "warn"
unreadable_literal           = "warn"
verbose_bit_mask             = "warn"
zero_sized_map_values        = "warn"

# restriction
cfg_not_test                      = "warn"
empty_drop                        = "warn"
empty_enum_variants_with_brackets = "warn"
float_cmp_const                   = "warn"
get_unwrap                        = "warn"
infinite_loop                     = "warn"
lossy_float_literal               = "warn"
rc_buffer                         = "warn"
rc_mutex                          = "warn"
rest_pat_in_fully_bound_structs   = "warn"
string_lit_chars_any              = "warn"
verbose_file_reads                = "warn"
# https://github.com/rustwasm/wasm-bindgen/issues/3944
#mem_forget                      = "warn"

[workspace.package]
authors    = ["Check Developers and Contributors"]
categories = ["development-tools", "web-programming"]
edition    = "2024"
homepage   = "https://checkjs.dev/"
keywords   = ["parser", "linter", "formatter"]
license    = "MIT OR Apache-2.0"
repository = "https://github.com/checkjs/check"

[profile.release-with-debug]
debug    = true
inherits = "release"

[workspace.dependencies]
# publish
check_analyze                = { version = "0.5.7", path = "./crates/check_analyze" }
check_aria                   = { version = "0.5.7", path = "./crates/check_aria" }
check_aria_metadata          = { version = "0.5.7", path = "./crates/check_aria_metadata" }
check_console                = { version = "0.5.7", path = "./crates/check_console" }
check_control_flow           = { version = "0.5.7", path = "./crates/check_control_flow" }
check_css_analyze            = { version = "0.5.7", path = "./crates/check_css_analyze" }
check_css_factory            = { version = "0.5.7", path = "./crates/check_css_factory" }
check_css_formatter          = { version = "0.5.7", path = "./crates/check_css_formatter" }
check_css_parser             = { version = "0.5.7", path = "./crates/check_css_parser" }
check_css_semantic           = { version = "0.0.0", path = "./crates/check_css_semantic" }
check_css_syntax             = { version = "0.5.7", path = "./crates/check_css_syntax" }
check_deserialize            = { version = "0.6.0", path = "./crates/check_deserialize" }
check_deserialize_macros     = { version = "0.6.0", path = "./crates/check_deserialize_macros" }
check_diagnostics            = { version = "0.5.7", path = "./crates/check_diagnostics" }
check_diagnostics_categories = { version = "0.5.7", path = "./crates/check_diagnostics_categories" }
check_diagnostics_macros     = { version = "0.5.7", path = "./crates/check_diagnostics_macros" }
check_formatter              = { version = "0.5.7", path = "./crates/check_formatter" }
check_fs                     = { version = "0.5.7", path = "./crates/check_fs" }
check_glob                   = { version = "0.1.0", path = "./crates/check_glob" }
check_graphql_analyze        = { version = "0.0.1", path = "./crates/check_graphql_analyze" }
check_graphql_factory        = { version = "0.1.0", path = "./crates/check_graphql_factory" }
check_graphql_formatter      = { version = "0.1.0", path = "./crates/check_graphql_formatter" }
check_graphql_parser         = { version = "0.1.0", path = "./crates/check_graphql_parser" }
check_graphql_semantic       = { version = "0.0.0", path = "./crates/check_graphql_semantic" }
check_graphql_syntax         = { version = "0.1.0", path = "./crates/check_graphql_syntax" }
check_grit_factory           = { version = "0.5.7", path = "./crates/check_grit_factory" }
check_grit_formatter         = { version = "0.0.0", path = "./crates/check_grit_formatter" }
check_grit_parser            = { version = "0.1.0", path = "./crates/check_grit_parser" }
check_grit_patterns          = { version = "0.0.1", path = "./crates/check_grit_patterns" }
check_grit_syntax            = { version = "0.5.7", path = "./crates/check_grit_syntax" }
check_html_factory           = { version = "0.5.7", path = "./crates/check_html_factory" }
check_html_formatter         = { version = "0.0.0", path = "./crates/check_html_formatter" }
check_html_parser            = { version = "0.0.1", path = "./crates/check_html_parser" }
check_html_syntax            = { version = "0.5.7", path = "./crates/check_html_syntax" }
check_js_analyze             = { version = "0.5.7", path = "./crates/check_js_analyze" }
check_js_factory             = { version = "0.5.7", path = "./crates/check_js_factory" }
check_js_formatter           = { version = "0.5.7", path = "./crates/check_js_formatter" }
check_js_parser              = { version = "0.5.7", path = "./crates/check_js_parser" }
check_js_runtime             = { version = "0.0.1", path = "./crates/check_js_runtime" }
check_js_semantic            = { version = "0.5.7", path = "./crates/check_js_semantic" }
check_js_syntax              = { version = "0.5.7", path = "./crates/check_js_syntax" }
check_js_type_info           = { version = "0.0.1", path = "./crates/check_js_type_info" }
check_js_type_info_macros    = { version = "0.0.1", path = "./crates/check_js_type_info_macros" }
check_jsdoc_comment          = { version = "0.0.1", path = "./crates/check_jsdoc_comment" }
check_json_analyze           = { version = "0.5.7", path = "./crates/check_json_analyze" }
check_json_factory           = { version = "0.5.7", path = "./crates/check_json_factory" }
check_json_formatter         = { version = "0.5.7", path = "./crates/check_json_formatter" }
check_json_parser            = { version = "0.5.7", path = "./crates/check_json_parser" }
check_json_syntax            = { version = "0.5.7", path = "./crates/check_json_syntax" }
check_json_value             = { version = "0.1.0", path = "./crates/check_json_value" }
check_line_index             = { version = "0.1.0", path = "./crates/check_line_index" }
check_lsp_converters         = { version = "0.1.0", path = "./crates/check_lsp_converters" }
check_markdown_factory       = { version = "0.0.1", path = "./crates/check_markdown_factory" }
check_markdown_parser        = { version = "0.0.1", path = "./crates/check_markdown_parser" }
check_markdown_syntax        = { version = "0.0.1", path = "./crates/check_markdown_syntax" }
check_module_graph           = { version = "0.0.1", path = "./crates/check_module_graph" }
check_plugin_loader          = { version = "0.0.1", path = "./crates/check_plugin_loader" }
check_project_layout         = { version = "0.0.1", path = "./crates/check_project_layout" }
check_resolver               = { version = "0.1.0", path = "./crates/check_resolver" }
check_rule_options           = { version = "0.0.1", path = "./crates/check_rule_options" }
check_tailwind_factory       = { version = "0.0.1", path = "./crates/check_tailwind_factory" }
check_tailwind_parser        = { version = "0.0.1", path = "./crates/check_tailwind_parser" }
check_tailwind_syntax        = { version = "0.0.1", path = "./crates/check_tailwind_syntax" }
check_ungrammar              = { version = "0.3.1", path = "./crates/check_ungrammar" }
check_yaml_factory           = { version = "0.0.1", path = "./crates/check_yaml_factory" }
check_yaml_parser            = { version = "0.0.1", path = "./crates/check_yaml_parser" }
check_yaml_syntax            = { version = "0.0.1", path = "./crates/check_yaml_syntax" }

check_markup        = { version = "0.5.7", path = "./crates/check_markup" }
check_package       = { version = "0.5.7", path = "./crates/check_package" }
check_parser        = { version = "0.5.7", path = "./crates/check_parser" }
check_rowan         = { version = "0.5.7", path = "./crates/check_rowan" }
check_string_case   = { version = "0.5.7", path = "./crates/check_string_case", features = ["check_rowan"] }
check_suppression   = { version = "0.5.7", path = "./crates/check_suppression" }
check_text_edit     = { version = "0.5.7", path = "./crates/check_text_edit" }
check_text_size     = { version = "0.5.7", path = "./crates/check_text_size" }
check_unicode_table = { version = "0.5.7", path = "./crates/check_unicode_table" }

# not publish
check_cli            = { path = "./crates/check_cli" }
check_configuration  = { path = "./crates/check_configuration" }
check_flags          = { path = "./crates/check_flags" }
check_formatter_test = { path = "./crates/check_formatter_test" }
check_lsp            = { path = "./crates/check_lsp" }
check_migrate        = { path = "./crates/check_migrate" }
check_service        = { path = "./crates/check_service" }
check_test_utils     = { path = "./crates/check_test_utils" }
tests_macros         = { path = "./crates/tests_macros" }

# Crates needed in the workspace
anyhow               = "1.0.99"
boa_engine           = "0.20.0"
bpaf                 = { version = "0.9.20", features = ["derive"] }
camino               = "1.1.12"
cfg-if               = "1.0.3"
countme              = "3.0.1"
crossbeam            = "0.8.4"
dashmap              = "6.1.0"
dirs                 = "6.0.0"
enumflags2           = "0.7.12"
getrandom            = "0.2.15"
globset              = "0.4.16"
grit-pattern-matcher = "0.5.1"
grit-util            = "0.5.1"
hashbrown            = { version = "0.15.5", default-features = false }
ignore               = "0.4.23"
indexmap             = { version = "2.10.0" }
insta                = "1.43.2"
libc                 = "0.2.175"
mimalloc             = "0.1.48"
papaya               = "0.2.3"
path-absolutize      = { version = "3.1.1", optional = false, features = ["use_unix_paths_on_wasm"] }
proc-macro-error2    = { version = "2.0.1", default-features = false }
proc-macro2          = "1.0.101"
quickcheck           = "1.0.3"
quickcheck_macros    = "1.1.0"
quote                = "1.0.40"
rayon                = "1.10.0"
regex                = "1.11.2"
rust-lapper          = "1.2.0"
rustc-hash           = "2.1.1"
schemars             = { version = "0.8.22", features = ["indexmap2", "smallvec"] }
serde                = { version = "1.0.219", features = ["derive"] }
serde_json           = "1.0.143"
similar              = "2.7.0"
smallvec             = { version = "1.15.1", features = ["union", "const_new", "serde"] }
static_assertions    = "1.1"
syn                  = "1.0.109"
termcolor            = "1.4.1"
terminal_size        = "0.4.3"
tikv-jemallocator    = "0.6.0"
tokio                = "1.47.1"
tower                = "0.5.2"
tower-lsp-server     = "0.22.1"
tracing              = { version = "0.1.41", default-features = false, features = ["std", "attributes"] }
tracing-subscriber   = "0.3.19"
unicode-bom          = "2.0.3"
unicode-width        = "0.1.12"
ureq                 = "3.0.12"
url                  = "2.5.4"
walkdir              = "2.5.0"
web-time             = "1.1.0"
windows              = "0.61.3"

[profile.dev.package.check_wasm]
debug     = true
opt-level = "s"

[profile.test.package.check_wasm]
debug     = true
opt-level = "s"

[profile.release.package.check_wasm]
debug     = false
opt-level = 3

#[patch.crates-io]
#grit-pattern-matcher = { path = "../gritql/crates/grit-pattern-matcher" }
#grit-util            = { path = "../gritql/crates/grit-util" }
